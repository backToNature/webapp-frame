var fs = require('fs');
var path = require('path');
var console = require('./console.js');
var analyse = require('./analyse.js');
var uglifyjs = require('uglify-js');


var build = function (fileName, baseDir, ofileName) {
    // file
    if (!fs.existsSync(fileName)) {
        console.error('can\'t find the file "' + fileName + '".');
        return;
    }


    // base dir
    if (baseDir === undefined) {
        baseDir = path.dirname(fileName);
    }
    if (!fs.existsSync(baseDir)) {
        console.error('can\'t find the src dir \'' + baseDir + '\'.');
        return;
    }


    // output file
    try {
        fs.writeFileSync(ofileName, '', 'utf-8');
    } catch (e) {
        console.error('can\'t write the output file "' + ofileName + '".', e.message);
        return;
    }

    var fnOutputFile = function (deps, fileName) {
        var code = '';
        var key, obj, firstModule;
        for (key in deps) {
            if (!firstModule) {
                firstModule = key;
            }
            obj = deps[key];
            code += obj.code;
            code += '\n\n';
        }

        var workspace = path.dirname(__dirname).replace(/\\/g, '/');
        var loaderCode = fs.readFileSync(path.resolve(workspace, './action/loader.js'), 'utf8');

        //loaderCode = loaderCode.replace('RUN_FIRST_MODULE', 'run("' + firstModule + '");');
        //loaderCode = loaderCode.replace('DEFINE_MODULES', code);
        loaderCode = loaderCode.split('RUN_FIRST_MODULE');
        loaderCode = [
            loaderCode[0],
            'run("' + firstModule + '");',
            loaderCode[1] 
        ].join('');

        loaderCode = loaderCode.split('DEFINE_MODULES');
        loaderCode = [
            loaderCode[0],
            code,
            loaderCode[1]
        ].join('');

        var ast = uglifyjs.parser.parse(loaderCode);
        loaderCode = uglifyjs.uglify.gen_code(ast, { beautify: 4 });

        fs.writeFileSync(fileName, loaderCode);
    };


    var fnBuildFile = function (fileName, baseDir) {
        var root = {};

        var fnAnalyse = function (fileName) {
            fileName = fileName.replace(/\\/g, '/');
            if (root[fileName]) {
                return;
            }

            root[fileName] = analyse.getFileDependencies(fileName, baseDir);
            root[fileName].css = [];
            root[fileName].deps.forEach(function (file) {
                if (file.match(/\.css$/)) {
                    root[fileName].css.push(file);
                    //return;
                }
                fnAnalyse(file);
            });
        };

        fnAnalyse(fileName);

        return root;
    };


    (function () {
        baseDir = path.resolve(baseDir);
        fileName = path.resolve(baseDir, fileName);

        var deps = fnBuildFile(fileName, baseDir);
        fnOutputFile(deps, ofileName);
        
        console.log('successfully generated file \'' + fileName + '\'.');
    }());
};


exports.build = build;
